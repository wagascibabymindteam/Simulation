//
// File generated by rootcint at Wed Feb 14 15:52:57 2018

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "PMReconSummaryDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void PMReconSummary_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_PMReconSummary(void *p = 0);
   static void *newArray_PMReconSummary(Long_t size, void *p);
   static void delete_PMReconSummary(void *p);
   static void deleteArray_PMReconSummary(void *p);
   static void destruct_PMReconSummary(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PMReconSummary*)
   {
      ::PMReconSummary *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PMReconSummary >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PMReconSummary", ::PMReconSummary::Class_Version(), "PMReconSummary.h", 18,
                  typeid(::PMReconSummary), DefineBehavior(ptr, ptr),
                  &::PMReconSummary::Dictionary, isa_proxy, 0,
                  sizeof(::PMReconSummary) );
      instance.SetNew(&new_PMReconSummary);
      instance.SetNewArray(&newArray_PMReconSummary);
      instance.SetDelete(&delete_PMReconSummary);
      instance.SetDeleteArray(&deleteArray_PMReconSummary);
      instance.SetDestructor(&destruct_PMReconSummary);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PMReconSummary*)
   {
      return GenerateInitInstanceLocal((::PMReconSummary*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PMReconSummary*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *PMReconSummary::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *PMReconSummary::Class_Name()
{
   return "PMReconSummary";
}

//______________________________________________________________________________
const char *PMReconSummary::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PMReconSummary*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PMReconSummary::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PMReconSummary*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PMReconSummary::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PMReconSummary*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PMReconSummary::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PMReconSummary*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void PMReconSummary::Streamer(TBuffer &R__b)
{
   // Stream an object of class PMReconSummary.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> view;
      R__b >> clstime;
      R__b >> clstimecorr;
      R__b >> nactpln;
      R__b >> layerpe;
      R__b >> hitmod;
      R__b >> hitcyc;
      R__b >> spill_flag;
      R__b >> bunch_flag;
      R__b >> ontime;
      R__b >> vetodist;
      R__b >> vetowtracking;
      R__b >> edgewtracking;
      R__b >> hastrk;
      R__b >> matchtrk;
      R__b >> modfc;
      R__b >> startz;
      R__b >> endz;
      R__b >> vertexxy;
      R__b >> angle;
      R__b >> slope;
      R__b >> intcpt;
      R__b >> startpln;
      R__b >> startxy;
      R__b >> endpln;
      R__b >> endxy;
      R__b >> nhits;
      int R__i;
      for (R__i = 0; R__i < 1000; R__i++)
         fIngridHit[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 10; R__i++)
         fTrack[R__i].Streamer(R__b);
      R__b >> ntracks;
      R__b.CheckByteCount(R__s, R__c, PMReconSummary::IsA());
   } else {
      R__c = R__b.WriteVersion(PMReconSummary::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << view;
      R__b << clstime;
      R__b << clstimecorr;
      R__b << nactpln;
      R__b << layerpe;
      R__b << hitmod;
      R__b << hitcyc;
      R__b << spill_flag;
      R__b << bunch_flag;
      R__b << ontime;
      R__b << vetodist;
      R__b << vetowtracking;
      R__b << edgewtracking;
      R__b << hastrk;
      R__b << matchtrk;
      R__b << modfc;
      R__b << startz;
      R__b << endz;
      R__b << vertexxy;
      R__b << angle;
      R__b << slope;
      R__b << intcpt;
      R__b << startpln;
      R__b << startxy;
      R__b << endpln;
      R__b << endxy;
      R__b << nhits;
      int R__i;
      for (R__i = 0; R__i < 1000; R__i++)
         fIngridHit[R__i].Streamer(R__b);
      for (R__i = 0; R__i < 10; R__i++)
         fTrack[R__i].Streamer(R__b);
      R__b << ntracks;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void PMReconSummary::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class PMReconSummary.
      TClass *R__cl = ::PMReconSummary::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "view", &view);
      R__insp.Inspect(R__cl, R__parent, "clstime", &clstime);
      R__insp.Inspect(R__cl, R__parent, "clstimecorr", &clstimecorr);
      R__insp.Inspect(R__cl, R__parent, "nactpln", &nactpln);
      R__insp.Inspect(R__cl, R__parent, "layerpe", &layerpe);
      R__insp.Inspect(R__cl, R__parent, "hitmod", &hitmod);
      R__insp.Inspect(R__cl, R__parent, "hitcyc", &hitcyc);
      R__insp.Inspect(R__cl, R__parent, "spill_flag", &spill_flag);
      R__insp.Inspect(R__cl, R__parent, "bunch_flag", &bunch_flag);
      R__insp.Inspect(R__cl, R__parent, "ontime", &ontime);
      R__insp.Inspect(R__cl, R__parent, "vetodist", &vetodist);
      R__insp.Inspect(R__cl, R__parent, "vetowtracking", &vetowtracking);
      R__insp.Inspect(R__cl, R__parent, "edgewtracking", &edgewtracking);
      R__insp.Inspect(R__cl, R__parent, "hastrk", &hastrk);
      R__insp.Inspect(R__cl, R__parent, "matchtrk", &matchtrk);
      R__insp.Inspect(R__cl, R__parent, "modfc", &modfc);
      R__insp.Inspect(R__cl, R__parent, "startz", &startz);
      R__insp.Inspect(R__cl, R__parent, "endz", &endz);
      R__insp.Inspect(R__cl, R__parent, "vertexxy", &vertexxy);
      R__insp.Inspect(R__cl, R__parent, "angle", &angle);
      R__insp.Inspect(R__cl, R__parent, "slope", &slope);
      R__insp.Inspect(R__cl, R__parent, "intcpt", &intcpt);
      R__insp.Inspect(R__cl, R__parent, "startpln", &startpln);
      R__insp.Inspect(R__cl, R__parent, "startxy", &startxy);
      R__insp.Inspect(R__cl, R__parent, "endpln", &endpln);
      R__insp.Inspect(R__cl, R__parent, "endxy", &endxy);
      R__insp.Inspect(R__cl, R__parent, "nhits", &nhits);
      R__insp.Inspect(R__cl, R__parent, "fIngridHit[1000]", fIngridHit);
      R__insp.Inspect(R__cl, R__parent, "fTrack[10]", fTrack);
      R__insp.Inspect(R__cl, R__parent, "ntracks", &ntracks);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_PMReconSummary(void *p) {
      return  p ? new(p) ::PMReconSummary : new ::PMReconSummary;
   }
   static void *newArray_PMReconSummary(Long_t nElements, void *p) {
      return p ? new(p) ::PMReconSummary[nElements] : new ::PMReconSummary[nElements];
   }
   // Wrapper around operator delete
   static void delete_PMReconSummary(void *p) {
      delete ((::PMReconSummary*)p);
   }
   static void deleteArray_PMReconSummary(void *p) {
      delete [] ((::PMReconSummary*)p);
   }
   static void destruct_PMReconSummary(void *p) {
      typedef ::PMReconSummary current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PMReconSummary

/********************************************************
* PMReconSummaryDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && (__GNUC__ > 3) && (__GNUC_MINOR__ > 1)
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablePMReconSummaryDict();

extern "C" void G__set_cpp_environmentPMReconSummaryDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("PMReconSummary.h");
  G__cpp_reset_tagtablePMReconSummaryDict();
}
#include <new>
extern "C" int G__cpp_dllrevPMReconSummaryDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* PMReconSummary */
static int G__PMReconSummaryDict_173_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PMReconSummary* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PMReconSummary[n];
     } else {
       p = new((void*) gvp) PMReconSummary[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PMReconSummary;
     } else {
       p = new((void*) gvp) PMReconSummary;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__PMReconSummaryDictLN_PMReconSummary);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PMReconSummaryDict_173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PMReconSummary* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PMReconSummary(*(PMReconSummary*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) PMReconSummary(*(PMReconSummary*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__PMReconSummaryDictLN_PMReconSummary);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PMReconSummaryDict_173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMReconSummary*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PMReconSummaryDict_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMReconSummary*) G__getstructoffset())->AddIngridHit((IngridHitSummary*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PMReconSummaryDict_173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const PMReconSummary*) G__getstructoffset())->GetIngridHit((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PMReconSummaryDict_173_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMReconSummary*) G__getstructoffset())->AddTrack((IngridTrackSummary*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PMReconSummaryDict_173_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const PMReconSummary*) G__getstructoffset())->GetTrack((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PMReconSummaryDict_173_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMReconSummary*) G__getstructoffset())->Nhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PMReconSummaryDict_173_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMReconSummary*) G__getstructoffset())->Ntracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PMReconSummaryDict_173_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PMReconSummary::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PMReconSummaryDict_173_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMReconSummary::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PMReconSummaryDict_173_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PMReconSummary::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PMReconSummaryDict_173_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PMReconSummary::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PMReconSummaryDict_173_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMReconSummary*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PMReconSummaryDict_173_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMReconSummary::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PMReconSummaryDict_173_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PMReconSummary::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PMReconSummaryDict_173_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMReconSummary::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PMReconSummaryDict_173_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PMReconSummary::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PMReconSummary G__TPMReconSummary;
static int G__PMReconSummaryDict_173_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PMReconSummary*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PMReconSummary*) (soff+(sizeof(PMReconSummary)*i)))->~G__TPMReconSummary();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PMReconSummary*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PMReconSummary*) (soff))->~G__TPMReconSummary();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PMReconSummaryDict_173_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PMReconSummary* dest = (PMReconSummary*) G__getstructoffset();
   *dest = *(PMReconSummary*) libp->para[0].ref;
   const PMReconSummary& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* PMReconSummary */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncPMReconSummaryDict {
 public:
  G__Sizep2memfuncPMReconSummaryDict(): p(&G__Sizep2memfuncPMReconSummaryDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncPMReconSummaryDict::*p)();
};

size_t G__get_sizep2memfuncPMReconSummaryDict()
{
  G__Sizep2memfuncPMReconSummaryDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancePMReconSummaryDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PMReconSummaryDictLN_PMReconSummary))) {
     PMReconSummary *G__Lderived;
     G__Lderived=(PMReconSummary*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PMReconSummaryDictLN_PMReconSummary),G__get_linked_tagnum(&G__PMReconSummaryDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablePMReconSummaryDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__PMReconSummaryDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__PMReconSummaryDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__PMReconSummaryDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__PMReconSummaryDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* PMReconSummary */
static void G__setup_memvarPMReconSummary(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PMReconSummaryDictLN_PMReconSummary));
   { PMReconSummary *p; p=(PMReconSummary*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->view)-(long)(p)),105,0,0,-1,-1,-1,1,"view=",0,"view (tate or yoko)");
   G__memvar_setup((void*)((long)(&p->clstime)-(long)(p)),102,0,0,-1,-1,-1,1,"clstime=",0,"time of cluster defined by most high p.e. channel's time");
   G__memvar_setup((void*)((long)(&p->clstimecorr)-(long)(p)),102,0,0,-1,-1,-1,1,"clstimecorr=",0,"time after correction by measurement time of CT");
   G__memvar_setup((void*)((long)(&p->nactpln)-(long)(p)),105,0,0,-1,-1,-1,1,"nactpln=",0,"number of active planes");
   G__memvar_setup((void*)((long)(&p->layerpe)-(long)(p)),102,0,0,-1,-1,-1,1,"layerpe=",0,"number of p.e. / active layer");
   G__memvar_setup((void*)((long)(&p->hitmod)-(long)(p)),105,0,0,-1,-1,-1,1,"hitmod=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitcyc)-(long)(p)),105,0,0,-1,-1,-1,1,"hitcyc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->spill_flag)-(long)(p)),103,0,0,-1,-1,-1,1,"spill_flag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bunch_flag)-(long)(p)),103,0,0,-1,-1,-1,1,"bunch_flag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ontime)-(long)(p)),103,0,0,-1,-1,-1,1,"ontime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vetodist)-(long)(p)),102,0,0,-1,-1,-1,1,"vetodist=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vetowtracking)-(long)(p)),103,0,0,-1,-1,-1,1,"vetowtracking=",0,"Upstream VETO");
   G__memvar_setup((void*)((long)(&p->edgewtracking)-(long)(p)),103,0,0,-1,-1,-1,1,"edgewtracking=",0,"Fiducial CUT");
   G__memvar_setup((void*)((long)(&p->hastrk)-(long)(p)),103,0,0,-1,-1,-1,1,"hastrk=",0,"Tracking succsess");
   G__memvar_setup((void*)((long)(&p->matchtrk)-(long)(p)),103,0,0,-1,-1,-1,1,"matchtrk=",0,"Track matching selection");
   G__memvar_setup((void*)((long)(&p->modfc)-(long)(p)),103,0,0,-1,-1,-1,1,"modfc=",0,"module FC(Fully Contained) event");
   G__memvar_setup((void*)((long)(&p->startz)-(long)(p)),102,0,0,-1,-1,-1,1,"startz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->endz)-(long)(p)),102,0,0,-1,-1,-1,1,"endz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vertexxy)-(long)(p)),105,0,0,-1,-1,-1,1,"vertexxy=",0,"most upstream TPL #(from Y view)");
   G__memvar_setup((void*)((long)(&p->angle)-(long)(p)),102,0,0,-1,-1,-1,1,"angle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->slope)-(long)(p)),102,0,0,-1,-1,-1,1,"slope=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->intcpt)-(long)(p)),102,0,0,-1,-1,-1,1,"intcpt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->startpln)-(long)(p)),105,0,0,-1,-1,-1,1,"startpln=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->startxy)-(long)(p)),102,0,0,-1,-1,-1,1,"startxy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->endpln)-(long)(p)),105,0,0,-1,-1,-1,1,"endpln=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->endxy)-(long)(p)),102,0,0,-1,-1,-1,1,"endxy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nhits)-(long)(p)),105,0,0,-1,-1,-1,1,"nhits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PMReconSummaryDictLN_TRef),-1,-1,4,"fIngridHit[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PMReconSummaryDictLN_TRef),-1,-1,4,"fTrack[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ntracks)-(long)(p)),105,0,0,-1,-1,-1,1,"ntracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PMReconSummaryDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarPMReconSummaryDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncPMReconSummary(void) {
   /* PMReconSummary */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PMReconSummaryDictLN_PMReconSummary));
   G__memfunc_setup("PMReconSummary",1410,G__PMReconSummaryDict_173_0_1, 105, G__get_linked_tagnum(&G__PMReconSummaryDictLN_PMReconSummary), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PMReconSummary",1410,G__PMReconSummaryDict_173_0_2, 105, G__get_linked_tagnum(&G__PMReconSummaryDictLN_PMReconSummary), -1, 0, 1, 1, 1, 0, "u 'PMReconSummary' - 11 - basicsum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__PMReconSummaryDict_173_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddIngridHit",1163,G__PMReconSummaryDict_173_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'IngridHitSummary' - 0 - hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIngridHit",1186,G__PMReconSummaryDict_173_0_6, 85, G__get_linked_tagnum(&G__PMReconSummaryDictLN_IngridHitSummary), -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTrack",766,G__PMReconSummaryDict_173_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'IngridTrackSummary' - 0 - trk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrack",789,G__PMReconSummaryDict_173_0_8, 85, G__get_linked_tagnum(&G__PMReconSummaryDictLN_IngridTrackSummary), -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nhits",518,G__PMReconSummaryDict_173_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ntracks",726,G__PMReconSummaryDict_173_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PMReconSummaryDict_173_0_11, 85, G__get_linked_tagnum(&G__PMReconSummaryDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&PMReconSummary::Class), 0);
   G__memfunc_setup("Class_Name",982,G__PMReconSummaryDict_173_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&PMReconSummary::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__PMReconSummaryDict_173_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&PMReconSummary::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__PMReconSummaryDict_173_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&PMReconSummary::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PMReconSummaryDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PMReconSummaryDict_173_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PMReconSummaryDict_173_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&PMReconSummary::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PMReconSummaryDict_173_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&PMReconSummary::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__PMReconSummaryDict_173_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&PMReconSummary::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PMReconSummaryDict_173_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&PMReconSummary::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~PMReconSummary", 1536, G__PMReconSummaryDict_173_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PMReconSummaryDict_173_0_24, (int) ('u'), G__get_linked_tagnum(&G__PMReconSummaryDictLN_PMReconSummary), -1, 1, 1, 1, 1, 0, "u 'PMReconSummary' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncPMReconSummaryDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalPMReconSummaryDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcPMReconSummaryDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__PMReconSummaryDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__PMReconSummaryDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__PMReconSummaryDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__PMReconSummaryDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__PMReconSummaryDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__PMReconSummaryDictLN_TRef = { "TRef" , 99 , -1 };
G__linked_taginfo G__PMReconSummaryDictLN_IngridHitSummary = { "IngridHitSummary" , 99 , -1 };
G__linked_taginfo G__PMReconSummaryDictLN_IngridTrackSummary = { "IngridTrackSummary" , 99 , -1 };
G__linked_taginfo G__PMReconSummaryDictLN_PMReconSummary = { "PMReconSummary" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablePMReconSummaryDict() {
  G__PMReconSummaryDictLN_TClass.tagnum = -1 ;
  G__PMReconSummaryDictLN_TBuffer.tagnum = -1 ;
  G__PMReconSummaryDictLN_TMemberInspector.tagnum = -1 ;
  G__PMReconSummaryDictLN_TObject.tagnum = -1 ;
  G__PMReconSummaryDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__PMReconSummaryDictLN_TRef.tagnum = -1 ;
  G__PMReconSummaryDictLN_IngridHitSummary.tagnum = -1 ;
  G__PMReconSummaryDictLN_IngridTrackSummary.tagnum = -1 ;
  G__PMReconSummaryDictLN_PMReconSummary.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablePMReconSummaryDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__PMReconSummaryDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__PMReconSummaryDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__PMReconSummaryDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__PMReconSummaryDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__PMReconSummaryDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__PMReconSummaryDictLN_TRef);
   G__get_linked_tagnum_fwd(&G__PMReconSummaryDictLN_IngridHitSummary);
   G__get_linked_tagnum_fwd(&G__PMReconSummaryDictLN_IngridTrackSummary);
   G__tagtable_setup(G__get_linked_tagnum(&G__PMReconSummaryDictLN_PMReconSummary),sizeof(PMReconSummary),-1,30464,"Ingrid Hit Summary",G__setup_memvarPMReconSummary,G__setup_memfuncPMReconSummary);
}
extern "C" void G__cpp_setupPMReconSummaryDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupPMReconSummaryDict()");
  G__set_cpp_environmentPMReconSummaryDict();
  G__cpp_setup_tagtablePMReconSummaryDict();

  G__cpp_setup_inheritancePMReconSummaryDict();

  G__cpp_setup_typetablePMReconSummaryDict();

  G__cpp_setup_memvarPMReconSummaryDict();

  G__cpp_setup_memfuncPMReconSummaryDict();
  G__cpp_setup_globalPMReconSummaryDict();
  G__cpp_setup_funcPMReconSummaryDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncPMReconSummaryDict();
  return;
}
class G__cpp_setup_initPMReconSummaryDict {
  public:
    G__cpp_setup_initPMReconSummaryDict() { G__add_setup_func("PMReconSummaryDict",(G__incsetup)(&G__cpp_setupPMReconSummaryDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initPMReconSummaryDict() { G__remove_setup_func("PMReconSummaryDict"); }
};
G__cpp_setup_initPMReconSummaryDict G__cpp_setup_initializerPMReconSummaryDict;

